name: Ci Cd Staging Environment

on:
  pull_request:
    branches: main

jobs:
  try:
    # strategy:
  #     matrix:
  #       foo:
  #         - bar: 1
  #           id: 1
  #           a: 1
  #           b: 1
  #         - ok: 2
  #           id: 2
  #           a: 2
  #           b: 2
  #   uses: ./.github/workflows/deploy.yaml
  #   with:
  #     foo: ${{matrix.foo.id}}-${{matrix.foo.a}}
  #   secrets: inherit
  # out:
  #   runs-on: ubuntu-latest
  #   needs: try
  #   steps:
  #       - run: echo ${{needs.try.outputs.key}} 
    runs-on: ubuntu-latest
    environment: staging
    env:
      IMAGE_NAME: ghcr.io/afifurrohman-id/grpc
    permissions:
      packages: write
    steps:
      - uses: actions/checkout@v4
      # - uses: docker/setup-qemu-action@v3
      #   with:
      #     platforms: aarch64
      # - uses: docker/setup-buildx-action@v3 
      # - uses: docker/login-action@v3
      #   with:
      #     registry: ghcr.io
      #     username: ${{github.repository_owner}}
      #     password: ${{secrets.GITHUB_TOKEN}}
      # - uses: docker/build-push-action@v5
      #   with:
      #     platforms: linux/amd64,linux/arm64
      #     push: true
      #     cache-from: type=gha
      #     cache-to: type=gha,mode=max
      #     tags: |
      #       ${{env.IMAGE_NAME}}:${{github.sha}}
      #       ${{env.IMAGE_NAME}}
      
      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - uses: azure/cli@v2
        with:
          inlineScript: |
            az extension add --allow-preview -n containerapp --upgrade -y

            ENV_NAME=$(az containerapp env list -g ${{secrets.AZURE_RESOURCE_GROUP}} --query [0].name)

            az deployment group create  \
            -g ${{secrets.AZURE_RESOURCE_GROUP}} \
            -f deployments/grpc/main.bicep \
            -p containerAppName=grpc \
            -p image=${{env.IMAGE_NAME}} \
            -p targetPort=${{secrets.PORT}} \
            -p externalIngress=true \
            -p transportProtocol=http2 \
            -p memory=0.5Gi \
            -p cpuCores=0.25 \
            -p envName=${ENV_NAME//\"}
            # -p environmentId=${ENV_ID//\"}